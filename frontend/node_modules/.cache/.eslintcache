[{"A:\\MockRw59\\frontend\\src\\index.js":"1","A:\\MockRw59\\frontend\\src\\App.js":"2","A:\\MockRw59\\frontend\\src\\context\\AuthContext.js":"3","A:\\MockRw59\\frontend\\src\\components\\Layout\\Layout.jsx":"4","A:\\MockRw59\\frontend\\src\\components\\Header\\Header.jsx":"5","A:\\MockRw59\\frontend\\src\\router\\Routers.jsx":"6","A:\\MockRw59\\frontend\\src\\components\\Footer\\Footer.jsx":"7","A:\\MockRw59\\frontend\\src\\Admin\\components\\Headers\\AdminHeader.jsx":"8","A:\\MockRw59\\frontend\\src\\Admin\\components\\Footers\\Footers.jsx":"9","A:\\MockRw59\\frontend\\src\\pages\\SeachResultList.jsx":"10","A:\\MockRw59\\frontend\\src\\pages\\TourDetails.jsx":"11","A:\\MockRw59\\frontend\\src\\pages\\Home.jsx":"12","A:\\MockRw59\\frontend\\src\\pages\\Tours.jsx":"13","A:\\MockRw59\\frontend\\src\\pages\\ThankYou.jsx":"14","A:\\MockRw59\\frontend\\src\\pages\\Register.jsx":"15","A:\\MockRw59\\frontend\\src\\pages\\Login.jsx":"16","A:\\MockRw59\\frontend\\src\\shared\\Subtitle.jsx":"17","A:\\MockRw59\\frontend\\src\\Admin\\pages\\statistical\\Staticcal.jsx":"18","A:\\MockRw59\\frontend\\src\\Admin\\pages\\tour\\TourList.jsx":"19","A:\\MockRw59\\frontend\\src\\Admin\\pages\\booking\\Booking.jsx":"20","A:\\MockRw59\\frontend\\src\\Admin\\pages\\user\\Users.jsx":"21","A:\\MockRw59\\frontend\\src\\shared\\Newsletter.jsx":"22","A:\\MockRw59\\frontend\\src\\shared\\CommonSection.jsx":"23","A:\\MockRw59\\frontend\\src\\shared\\TourCard.jsx":"24","A:\\MockRw59\\frontend\\src\\utils\\config.js":"25","A:\\MockRw59\\frontend\\src\\shared\\SearchBar.jsx":"26","A:\\MockRw59\\frontend\\src\\utils\\avgRating.js":"27","A:\\MockRw59\\frontend\\src\\services\\ServiceList.jsx":"28","A:\\MockRw59\\frontend\\src\\Admin\\utils\\PaymentStatus.js":"29","A:\\MockRw59\\frontend\\src\\components\\Featured-tours\\FeaturedTourList.jsx":"30","A:\\MockRw59\\frontend\\src\\components\\Testimonial\\Testimonials.jsx":"31","A:\\MockRw59\\frontend\\src\\components\\hooks\\useFetch.js":"32","A:\\MockRw59\\frontend\\src\\components\\image-gallery\\MasonryImagesGallery.jsx":"33","A:\\MockRw59\\frontend\\src\\components\\Booking\\Booking.jsx":"34","A:\\MockRw59\\frontend\\src\\Admin\\pages\\statistical\\BookingChart.js":"35","A:\\MockRw59\\frontend\\src\\Admin\\pages\\tour\\AddTourModal.js":"36","A:\\MockRw59\\frontend\\src\\Admin\\pages\\booking\\TourInfoModal.js":"37","A:\\MockRw59\\frontend\\src\\Admin\\pages\\tour\\EditTourModal.js":"38","A:\\MockRw59\\frontend\\src\\Admin\\pages\\user\\AddUserModal.js":"39","A:\\MockRw59\\frontend\\src\\Admin\\pages\\user\\EditUserModal.js":"40","A:\\MockRw59\\frontend\\src\\Admin\\pages\\booking\\BookingTable.js":"41","A:\\MockRw59\\frontend\\src\\services\\ServiceCard.jsx":"42","A:\\MockRw59\\frontend\\src\\Admin\\utils\\formatVND.js":"43","A:\\MockRw59\\frontend\\src\\components\\image-gallery\\galleryImage.js":"44","A:\\MockRw59\\frontend\\src\\Admin\\pages\\statistical\\BookingByStatus.js":"45","A:\\MockRw59\\frontend\\src\\Admin\\pages\\statistical\\BookingByStatusD.js":"46"},{"size":611,"mtime":1691123510000,"results":"47","hashOfConfig":"48"},{"size":130,"mtime":1691123510000,"results":"49","hashOfConfig":"48"},{"size":3119,"mtime":1691123510000,"results":"50","hashOfConfig":"48"},{"size":1067,"mtime":1691185923887,"results":"51","hashOfConfig":"48"},{"size":3540,"mtime":1691183972076,"results":"52","hashOfConfig":"48"},{"size":1442,"mtime":1694512995562,"results":"53","hashOfConfig":"48"},{"size":4209,"mtime":1691123510000,"results":"54","hashOfConfig":"48"},{"size":3942,"mtime":1694551367432,"results":"55","hashOfConfig":"48"},{"size":4188,"mtime":1691186042344,"results":"56","hashOfConfig":"48"},{"size":1072,"mtime":1691123510000,"results":"57","hashOfConfig":"48"},{"size":8203,"mtime":1692954743882,"results":"58","hashOfConfig":"48"},{"size":6628,"mtime":1691237522710,"results":"59","hashOfConfig":"48"},{"size":2310,"mtime":1698554491419,"results":"60","hashOfConfig":"48"},{"size":978,"mtime":1691123510000,"results":"61","hashOfConfig":"48"},{"size":4326,"mtime":1693893078581,"results":"62","hashOfConfig":"48"},{"size":3209,"mtime":1693893041210,"results":"63","hashOfConfig":"48"},{"size":154,"mtime":1691123510000,"results":"64","hashOfConfig":"48"},{"size":979,"mtime":1694562845593,"results":"65","hashOfConfig":"48"},{"size":9497,"mtime":1694514666010,"results":"66","hashOfConfig":"48"},{"size":10383,"mtime":1694551264468,"results":"67","hashOfConfig":"48"},{"size":9433,"mtime":1691695041766,"results":"68","hashOfConfig":"48"},{"size":1045,"mtime":1691123510000,"results":"69","hashOfConfig":"48"},{"size":391,"mtime":1691123510000,"results":"70","hashOfConfig":"48"},{"size":1933,"mtime":1691413637181,"results":"71","hashOfConfig":"48"},{"size":105,"mtime":1693982165022,"results":"72","hashOfConfig":"48"},{"size":3109,"mtime":1691123510000,"results":"73","hashOfConfig":"48"},{"size":356,"mtime":1691123510000,"results":"74","hashOfConfig":"48"},{"size":913,"mtime":1691123510000,"results":"75","hashOfConfig":"48"},{"size":145,"mtime":1691509801154,"results":"76","hashOfConfig":"48"},{"size":1118,"mtime":1692124415004,"results":"77","hashOfConfig":"48"},{"size":3820,"mtime":1691123510000,"results":"78","hashOfConfig":"48"},{"size":1505,"mtime":1691192239728,"results":"79","hashOfConfig":"48"},{"size":653,"mtime":1691123510000,"results":"80","hashOfConfig":"48"},{"size":8683,"mtime":1691531580446,"results":"81","hashOfConfig":"48"},{"size":2085,"mtime":1694558832472,"results":"82","hashOfConfig":"48"},{"size":5725,"mtime":1694513888480,"results":"83","hashOfConfig":"48"},{"size":2026,"mtime":1691274396891,"results":"84","hashOfConfig":"48"},{"size":4661,"mtime":1694514387130,"results":"85","hashOfConfig":"48"},{"size":3636,"mtime":1691274755182,"results":"86","hashOfConfig":"48"},{"size":3885,"mtime":1694552647013,"results":"87","hashOfConfig":"48"},{"size":4030,"mtime":1691695117646,"results":"88","hashOfConfig":"48"},{"size":358,"mtime":1691123510000,"results":"89","hashOfConfig":"48"},{"size":323,"mtime":1691508508768,"results":"90","hashOfConfig":"48"},{"size":691,"mtime":1691123510000,"results":"91","hashOfConfig":"48"},{"size":3109,"mtime":1694562421137,"results":"92","hashOfConfig":"48"},{"size":3687,"mtime":1694563028354,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"1foau4u",{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"97"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"97"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"97"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"97"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"97"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"97"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"97"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"A:\\MockRw59\\frontend\\src\\index.js",[],[],[],"A:\\MockRw59\\frontend\\src\\App.js",[],[],"A:\\MockRw59\\frontend\\src\\context\\AuthContext.js",[],[],"A:\\MockRw59\\frontend\\src\\components\\Layout\\Layout.jsx",["242"],[],"import React, { useContext,useEffect } from \"react\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport AdminHeader from \"../../Admin/components/Headers/AdminHeader\";\nimport Routers from \"../../router/Routers\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport Footers from \"../../Admin/components/Footers/Footers\";\nconst Layout = () => {\n  const { role } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  // Sử dụng useEffect để chuyển hướng khi role là \"admin\" hoặc \"manager\"\n  useEffect(() => {\n    if (role === \"ADMIN\" || role === \"MANAGER\") {\n      navigate(\"/admin\");\n    }\n  }, []);\n\n  return (\n    <>\n      {/* Sử dụng câu lệnh điều kiện để hiển thị AdminHeader cho role là \"ADMIN\" hoặc \"MANAGER\" */}\n      {role === \"ADMIN\" || role === \"MANAGER\" ? <AdminHeader /> : <Header />}\n      <Routers />\n      {role === \"ADMIN\" || role === \"MANAGER\" ? <Footers /> : <Footer />} \n    </>\n  );\n};\n\nexport default Layout;\n","A:\\MockRw59\\frontend\\src\\components\\Header\\Header.jsx",[],[],"A:\\MockRw59\\frontend\\src\\router\\Routers.jsx",[],[],"A:\\MockRw59\\frontend\\src\\components\\Footer\\Footer.jsx",["243"],[],"import React from \"react\";\nimport \"./footer.css\";\nimport { Container, Row, Col, ListGroup, ListGroupItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport logo from \"../../assets/images/logo.png\";\nimport Subtitle from \"../../shared/Subtitle\";\n\n\nconst quick__links = [\n  {\n    path: \"/home\",\n    display: \"Trang Chủ\",\n  },\n  {\n    path: \"/about\",\n    display: \"Giới Thiệu Về Chúng\",\n  },\n  {\n    path: \"/tours\",\n    display: \"Danh Sách Tour\",\n  },\n];\nconst quick__links2 = [\n  {\n    path: \"/gallery\",\n    display: \"Phòng trưng bày\",\n  },\n  {\n    path: \"/login\",\n    display: \"Đăng Nhập\",\n  },\n  \n  {\n    path: \"/register\",\n    display: \"Đăng Kí\",\n  },\n\n\n];\n\n\nconst Footer = () => {\n  const year = new Date().getFullYear;\n\n  return (\n    <footer className=\"footer\">\n      <Container>\n        <Row>\n          <Col lg=\"3\">\n            <div className=\"logo\">\n              <img src={logo} alt=\"\" />\n              <p> </p>\n              <div className=\"social__links d-flex align-items-center gap-4\">\n                <span>\n                  <Link to=\"#\">\n                    <i className=\"ri-youtube-line\"></i>\n                  </Link>\n                </span>\n                <span>\n                  <Link to=\"#\">\n                    <i className=\"ri-github-fill\"></i>\n                  </Link>\n                </span>\n                <span>\n                  <Link to=\"#\">\n                    <i className=\"ri-facebook-circle-line\"></i>\n                  </Link>\n                </span>\n                <span>\n                  <Link to=\"#\">\n                    <i className=\"ri-instagram-line\"></i>\n                  </Link>\n                </span>\n              </div>\n            </div>\n          </Col>\n\n          <Col lg=\"3\">\n            <h5 className=\"footer__link-title\">Lựa Chọn</h5>\n            <ListGroup className=\"footer__quick-links\">\n              {quick__links.map((item, index) => (\n                <ListGroupItem key={index} className=\"ps-0 border-0\">\n                  <Link to={item.path}>{item.display}</Link>\n                </ListGroupItem>\n              ))}\n            </ListGroup>\n          </Col>\n          <Col lg=\"3\">\n            <h5 className=\"footer__link-title\">Đường Dẫn Nhanh</h5>\n            <ListGroup className=\"footer__quick-links\">\n              {quick__links2.map((item, index) => (\n                <ListGroupItem key={index} className=\"ps-0 border-0\">\n                  <Link to={item.path}>{item.display}</Link>\n                </ListGroupItem>\n              ))}\n            </ListGroup>\n          </Col>\n          <Col lg=\"3\">\n            <h5 className=\"footer__link-title\">Thông tin liên hệ</h5>\n            <ListGroup className=\"footer__quick-links\">\n              <ListGroupItem className=\"ps-0 border-0 d-flex align-items-center gap-3\">\n                <h6 className=\"mb-0 d-flex align-items-center gap-2\">\n                  <span>\n                    <i className=\"ri-map-pin-line\"></i>\n                  </span>\n                  Địa Chỉ:\n                </h6>\n                <p className=\"mb-0\"> Hà Nội, Việt Nam</p>\n              </ListGroupItem>\n              <ListGroupItem className=\"ps-0 border-0 d-flex align-items-center gap-3\">\n                <h6 className=\"mb-0 d-flex align-items-center gap-2\">\n                  <span>\n                    <i className=\"ri-mail-line\"></i>\n                  </span>\n                  Email:\n                </h6>\n                <p className=\"mb-0\"> Ngothachanh82@gmail.com</p>\n              </ListGroupItem>\n              <ListGroupItem className=\"ps-0 border-0 d-flex align-items-center gap-3\">\n                <h6 className=\"mb-0 d-flex align-items-center gap-2\">\n                  <span>\n                    <i className=\"ri-phone-fill\"></i>\n                  </span>\n                  Số Điện Thoại:\n                </h6>\n                <p className=\"mb-0\">+84825335380</p>\n                \n              </ListGroupItem>\n              <Subtitle subtitle={\"Project for Anh && Minh && Đức\"} />\n              <p ></p>\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","A:\\MockRw59\\frontend\\src\\Admin\\components\\Headers\\AdminHeader.jsx",[],[],"A:\\MockRw59\\frontend\\src\\Admin\\components\\Footers\\Footers.jsx",[],[],"A:\\MockRw59\\frontend\\src\\pages\\SeachResultList.jsx",[],[],"A:\\MockRw59\\frontend\\src\\pages\\TourDetails.jsx",["244"],[],"import React, { useEffect, useRef, useState, useContext } from \"react\";\nimport \"../styles/tour-Details.css\";\nimport { Container, Row, Col, ListGroup, Form } from \"reactstrap\";\nimport { useParams } from \"react-router-dom\";\nimport calculateAvgRating from \"./../utils/avgRating\";\nimport avatar from \"../assets/images/avatar.jpg\";\nimport Booking from \"../components/Booking/Booking\";\nimport Newsletter from \"../shared/Newsletter\";\nimport useFetch from \"../components/hooks/useFetch\";\nimport { BASE_URL } from \"../utils/config\";\nimport { AuthContext } from \"./../context/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\n\n\n\n\n\nconst TourDetails = () => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n \n  const reviewMsgRef = useRef(\"\");\n\n  const [tourRating, setTourRating] = useState(null);\n  const { username,token } = useContext(AuthContext);\n  const {\n    data: tour,\n    loading,\n    error,\n  } = useFetch(`${BASE_URL}/tours/getbyid?id=${id}`);\n\n  const {\n    photo,\n    title,\n    desc,\n    price,\n    reviews,\n    city,\n    address,\n    distance,\n    maxGroupSize,\n  } = tour;\n\n  const formatVND = (amount) => {\n    if (amount === undefined || isNaN(amount)) {\n      return '0';\n    }\n    return amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\n  };\n  const formattedPrice = formatVND(price);\n\n\n\n  const { totalRating, avgRating } = calculateAvgRating(reviews);\n\n  const options = { day: \"numeric\", month: \"long\", year: \"numeric\" };\n\n  const submitHandler = async (e) => {\n   \n    e.preventDefault();\n    const reviewText = reviewMsgRef.current.value;\n    try {\n      if (!username || username === undefined || username === null) {\n        alert(\"bạn phải đăng nhập\");\n       const cofirrmet = window.confirm(\" bạn muốn đăng nhập không \")\n       if (cofirrmet){\n         navigate('/login');\n       }\n      }\n\n      const reviewOject = {\n        username: username,\n        reviewText,\n        rating: tourRating,\n        tour : tour.id\n      };\n\n      const res = fetch(`${BASE_URL}/review/create`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n       body:JSON.stringify(reviewOject)\n      });\n      \n      if ((await res).status === 200) {\n        alert('bạn đã để lại bình luận thành công ')\n        window.location.reload();\n         \n      }\n\n      \n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  useEffect(() => {\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  }, [tour]);\n\n  return (\n    <>\n      <section>\n        <Container>\n          {loading && (\n            <h4 className=\"text-center pt-5\">Loading.............</h4>\n          )}\n          {error && <h4 className=\"text-center pt-5\">{error}</h4>}\n          {!loading && !error && (\n            <Row>\n              <Col lg=\"8\">\n                <div className=\"tour__content\">\n                  <img src={photo} alt=\"\" />\n\n                  <div className=\"tour__info\">\n                    <h2>{title}</h2>\n\n                    <div className=\"d-flex align-items-center gap-5\">\n                      <span className=\"tour__rating d-flex align-item-center gap-1\">\n                        <i\n                          class=\"ri-star-fill \"\n                          style={{ color: \"var(--secondary-color)\" }}\n                        ></i>\n                        {avgRating === 0 ? null : avgRating}\n                        {totalRating === 0 ? (\n                          \"không đánh giá\"\n                        ) : (\n                          <span>({reviews?.length})</span>\n                        )}\n                      </span>\n\n                      <span>\n                        <i className=\"ri-map-pin-user-fill\"></i>\n                        {address}\n                      </span>\n                    </div>\n                    <div className=\"tour__extra-details\">\n                      <span>\n                        <i className=\"ri-map-pin-2-line\"></i>\n                        {city}\n                      </span>\n                      <span>\n                        <i className=\"ri-money-dollar-circle-line\"></i>{formattedPrice} VND\n                        /Người\n                      </span>\n                      <span>\n                        <i className=\"ri-map-pin-time-line\"></i>\n                        {distance}k/m\n                      </span>\n                      <span>\n                        <i className=\"ri-group-line\"></i>\n                        {maxGroupSize} người\n                      </span>\n                    </div>\n                    <h5>Giới Thiêu Về Tour</h5>\n                    <div dangerouslySetInnerHTML={{ __html: tour.desc }} />\n                  </div>\n                  {/* ============= tour review section================ */}\n                  <div className=\"tour__reviews mt-4\">\n                    <h4>Reviews ({reviews?.length} review)</h4>\n                    <Form onSubmit={submitHandler}>\n                      <div className=\"d-flex align-items-center gap-3 mb-4 rating__group\">\n                        <span onClick={() => setTourRating(1)}>\n                          1<i className=\"ri-star-s-fill\"></i>\n                        </span>\n                        <span onClick={() => setTourRating(2)}>\n                          2<i className=\"ri-star-s-fill\"></i>\n                        </span>\n                        <span onClick={() => setTourRating(3)}>\n                          3<i className=\"ri-star-s-fill\"></i>\n                        </span>\n                        <span onClick={() => setTourRating(4)}>\n                          4<i className=\"ri-star-s-fill\"></i>\n                        </span>\n                        <span onClick={() => setTourRating(5)}>\n                          5<i className=\"ri-star-s-fill\"></i>\n                        </span>\n                      </div>\n\n                      <div className=\"review__input\">\n                        <input\n                          type=\"text\"\n                          ref={reviewMsgRef}\n                          placeholder=\"share your thoughts\"\n                          required\n                        />\n                        <button\n                          className=\"btn primary__btn text-white\"\n                          type=\"submit\"\n                        >\n                          Submit\n                        </button>\n                      </div>\n                    </Form>\n                    <ListGroup className=\"user__reviews\">\n                      {reviews?.map((review) => (\n                        <div className=\"review__item\">\n                          <img src={avatar} alt=\"\" />\n\n                          <div className=\"w-100\">\n                            <div\n                              className=\"d-flex align-items-center \n                          justify-content-between\"\n                            >\n                              <div>\n                                <h5>{review.username}</h5>\n                                <p>\n                                  {new Date().toLocaleDateString(\n                                    \"en-US\",\n                                    options\n                                  )}\n                                </p>\n                              </div>\n                              <span className=\"d-flex align-items-center\">\n                                {review.rating}\n                                <i className=\"ri-star-s-fill\"></i>\n                              </span>\n                            </div>\n                            <h6>{review.reviewText} </h6>\n                          </div>\n                        </div>\n                      ))}\n                    </ListGroup>\n                  </div>\n\n                  {/* ============= tour review section end================ */}\n                </div>\n              </Col>\n              <Col lg=\"4\">\n                <Booking tour={tour} avgRating={avgRating} />\n              </Col>\n            </Row>\n          )}\n        </Container>\n      </section>\n      <Newsletter />\n    </>\n  );\n};\n\nexport default TourDetails;\n","A:\\MockRw59\\frontend\\src\\pages\\Home.jsx",[],[],"A:\\MockRw59\\frontend\\src\\pages\\Tours.jsx",["245","246"],[],"import React, { useState, useEffect } from \"react\";\nimport CommonSection from \"../shared/CommonSection\";\nimport \"../styles/tour.css\";\nimport TourCard from \"../shared/TourCard\";\nimport SearchBar from \"../shared/SearchBar\";\nimport Newsletter from \"../shared/Newsletter\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport { BASE_URL } from \"../utils/config\";\nimport useFetch from './../components/hooks/useFetch'\n\n\nconst Tours = () => {\n  const [pageCount, setPageCount] = useState(0);\n  const [page, setPage] = useState(0);\n  const [pageSize, setPageSize] = useState(9);\n  \n  const {data:tours, loading,error} = useFetch(`${BASE_URL}/tours/page?page=${page}&pageSize=${pageSize}`);\n  const {data:tourCount} = useFetch(`${BASE_URL}/tours/getTourCount`);\n\n  useEffect(() => {\n    const pages = Math.ceil(tourCount / pageSize);\n    setPageCount(pages);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  }, [page,tourCount,tours]);\n\n  return (\n    <>\n      <CommonSection title={\"Tất Cả Các Tour Đang Có \"} />\n      <section>\n        <Container>\n          <Row>\n            <SearchBar />\n          </Row>\n        </Container>\n      </section>\n\n      <section className=\"pt-0\">\n        <Container>\n\n          {loading&&<h4 className=\"text-center pt-5\"> loading.............</h4>}\n          {error&&<h4 className=\"text-center pt-5\"> {error}</h4>}\n        {tours && Array.isArray(tours) && !loading && !error &&    \n        <Row>\n          {tours.map((tour) => (\n             tour.maxGroupSize > 0 && (\n            <Col lg=\"3\" className=\"mb-4\" key={tour.id}>\n              <TourCard tour={tour} />\n            </Col>\n           )\n            ))}\n\n          <Col lg=\"12\">\n            <div\n              className=\"pagination d-flex align-items-center \n                justify-content-center mt-4 gap-3\"\n            >\n              {[...Array(pageCount).keys()].map((number) => (\n                <span\n                  key={number}\n                  onClick={() => setPage(number)}\n                  className={page === number ? \"active__page\" : \"\"}\n                >\n                  {number + 1}\n                </span>\n              ))}\n            </div>\n          </Col>\n        </Row>\n        }\n        </Container>\n      </section>\n\n      <Newsletter />\n    </>\n  );\n};\n\nexport default Tours;\n","A:\\MockRw59\\frontend\\src\\pages\\ThankYou.jsx",[],[],"A:\\MockRw59\\frontend\\src\\pages\\Register.jsx",["247","248"],[],"import React, { useState } from \"react\";\nimport { Container, Row, Col, Form, FormGroup, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/register.css\";\nimport register from \"../assets/images/register.png\";\nimport userIcon from \"../assets/images/user.png\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Register = () => {\n  const navigate = useNavigate();\n\n  // const baseUrlAuth = \"http://13.212.151.155:8888/api\";\n  const baseUrlAuth = \"http://localhost:8888/api\";\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleRegister = async (event) => {\n    event.preventDefault();\n    setLoading(true);\n\n    const newUser = {\n      username: username,\n      password: password,\n      email: email,\n      fullName: fullName,\n      phone: phone,\n    };\n\n    try {\n      const response = await fetch(baseUrlAuth + \"/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newUser),\n      });\n\n      if (response.ok) {\n        alert(\"đăng kí thành công\");\n        navigate(\"/login\");\n      } else {\n        throw new Error(\"Đăng ký không thành công.\");\n      }\n    } catch (error) {\n      console.log(error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <section>\n      <Container>\n        <Row>\n          <Col lg=\"8\" className=\"m-auto\">\n            <div className=\"register__container d-flex justify-content-between\">\n              <div className=\"register__img\">\n                <img src={register} alt=\"\" />\n              </div>\n              <div className=\"register__form\">\n                <div className=\"user\">\n                  <img src={userIcon} alt=\"\" />\n                </div>\n                <h2>Register</h2>\n                <Form onSubmit={handleRegister}>\n                  <FormGroup>\n                    <input\n                      type=\"text\"\n                      placeholder=\"username\"\n                      required\n                      id=\"username\"\n                      onChange={(event) => setUsername(event.target.value)}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <input\n                      type=\"password\"\n                      placeholder=\"password\"\n                      required\n                      id=\"password\"\n                      onChange={(event) => setPassword(event.target.value)}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <input\n                      type=\"email\"\n                      placeholder=\"email\"\n                      required\n                      id=\"email\"\n                      onChange={(event) => setEmail(event.target.value)}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <input\n                      type=\"text\"\n                      placeholder=\"fullName\"\n                      required\n                      id=\"fullName\"\n                      onChange={(event) => setFullName(event.target.value)}\n                    />\n                  </FormGroup>\n                  <FormGroup>\n                    <input\n                      type=\"text\"\n                      placeholder=\"phone\"\n                      required\n                      id=\"phone\"\n                      onChange={(event) => setPhone(event.target.value)}\n                    />\n                  </FormGroup>\n                  <Button\n                    className=\"btn secondary__btn auth__btn\"\n                    type=\"submit\"\n                  >\n                    Create Account\n                  </Button>\n                </Form>\n                <p>\n                  Bạn đã có tài khoản hãy đăng nhập\n                  <Link to=\"/login\">Đăng Nhập</Link>\n                </p>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  );\n};\n\nexport default Register;\n","A:\\MockRw59\\frontend\\src\\pages\\Login.jsx",[],[],"A:\\MockRw59\\frontend\\src\\shared\\Subtitle.jsx",[],[],"A:\\MockRw59\\frontend\\src\\Admin\\pages\\statistical\\Staticcal.jsx",[],[],"A:\\MockRw59\\frontend\\src\\Admin\\pages\\tour\\TourList.jsx",["249"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Table, Button, Modal, ModalHeader, ModalBody, Container, Pagination, Input } from \"reactstrap\";\r\nimport \"./../../styles/tour-List.css\";\r\nimport AddTourModal from \"./AddTourModal\";\r\nimport EditTourModal from \"./EditTourModal\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport { EditorState, convertFromRaw, convertFromHTML, ContentState } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n\r\nconst baseUrl = \"http://localhost:8888/tours\";\r\n\r\nconst TourList = () => {\r\n  const [tours, setTours] = useState([]);\r\n  const [selectedTour, setSelectedTour] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [addModalOpen, setAddModalOpen] = useState(false);\r\n  const [editModalOpen, setEditModalOpen] = useState(false);\r\n  const { token } = useContext(AuthContext);\r\n\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchedTours, setSearchedTours] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchAllTours();\r\n  }, []);\r\n\r\n  const fetchAllTours = () => {\r\n    setLoading(true);\r\n    fetch(`${baseUrl}/get-all`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"không có tour nào được hiển thị \");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setTours(data);\r\n        setSearchedTours(data);\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const toggleModal = () => {\r\n    setModalOpen(!modalOpen);\r\n  };\r\n\r\n  const handleTourClick = (tour) => {\r\n    setSelectedTour(tour);\r\n    toggleModal();\r\n  };\r\n\r\n  const toggleAddModal = () => {\r\n    setAddModalOpen(!addModalOpen);\r\n  };\r\n\r\n  const toggleEditModal = () => {\r\n    setEditModalOpen(!editModalOpen);\r\n  };\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const toursPerPage = 4;\r\n\r\n  const indexOfLastTour = currentPage * toursPerPage;\r\n  const indexOfFirstTour = indexOfLastTour - toursPerPage;\r\n  const currentTours = searchedTours.slice(indexOfFirstTour, indexOfLastTour);\r\n\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const handleAddTour = (newTour) => {\r\n    fetch(`${baseUrl}/create`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(newTour),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          alert(\"Tour đã được thêm thành công\");\r\n          fetchAllTours();\r\n        } else {\r\n          throw new Error(\"Không thể thêm tour.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        setError(\"Có lỗi xảy ra khi thêm tour.\");\r\n      })\r\n      .finally(() => {\r\n        setAddModalOpen(false);\r\n      });\r\n  };\r\n\r\n  const handleUpdateTour = (updatedTour) => {\r\n    fetch(`${baseUrl}/update/${selectedTour.id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(updatedTour),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          alert(\"Tour đã được cập nhật thành công\");\r\n          fetchAllTours();\r\n        } else {\r\n          throw new Error(\"Không thể cập nhật tour.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        setError(\"Có lỗi xảy ra khi cập nhật tour.\");\r\n      })\r\n      .finally(() => {\r\n        setSelectedTour(null);\r\n        setEditModalOpen(false);\r\n      });\r\n  };\r\n\r\n  const handleDeleteTour = () => {\r\n    fetch(`${baseUrl}/${selectedTour.id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          alert(\"Tour đã được xóa thành công\");\r\n          fetchAllTours();\r\n        } else {\r\n          throw new Error(\"Không thể xóa tour.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        setError(\"Có lỗi xảy ra khi xóa tour.\");\r\n      })\r\n      .finally(() => {\r\n        setSelectedTour(null);\r\n      });\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    const filteredTours = tours.filter((tour) =>\r\n      tour.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setSearchedTours(filteredTours);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <section>\r\n        <h4 className=\"text-center\">Danh sách tours</h4>\r\n        <div className=\"input-container\">\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Nhập tên tour...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <Button color=\"primary\" onClick={handleSearch}>Tìm kiếm</Button>\r\n        </div>\r\n        <Button color=\"primary\" onClick={toggleAddModal}>Thêm Tour</Button>\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : error ? (\r\n          <p>Đã xảy ra lỗi: {error.message}</p>\r\n        ) : (\r\n          <Table className=\"tour-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Tiêu đề</th>\r\n                <th>Thành phố</th>\r\n                <th>Địa chỉ</th>\r\n                <th>Khoảng cách</th>\r\n                <th>Hình ảnh</th>\r\n                <th>Mô tả</th>\r\n                <th>Giá</th>\r\n                <th>Số Người</th>\r\n                <th>Nổi bật</th>\r\n                <th>Đánh giá</th>\r\n                <th>Chức năng</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {currentTours.map((tour) => (\r\n                <tr key={tour.id}>\r\n                  <td>{tour.id}</td>\r\n                  <td>{tour.title}</td>\r\n                  <td>{tour.city}</td>\r\n                  <td>{tour.address}</td>\r\n                  <td>{tour.distance}</td>\r\n                  <td>\r\n                    <img\r\n                      src={tour.photo}\r\n                      alt={tour.title}\r\n                      style={{ maxWidth: \"100px\", borderRadius: \"5px\" }}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    {tour.desc && tour.desc.length > 150 ? (\r\n                      <div>\r\n                        <p>{tour.desc.substring(0, 150)}...</p>\r\n                        <Button color=\"link\">Xem thêm</Button>\r\n                      </div>\r\n                    ) : (\r\n                      <div dangerouslySetInnerHTML={{ __html: tour.desc }} />\r\n                    )}\r\n                  </td>\r\n                  <td>{tour.price}</td>\r\n                  <td>{tour.maxGroupSize}</td>\r\n                  <td>{tour.featured ? \"Có\" : \"Không\"}</td>\r\n                  <td>\r\n                    {tour.reviews.map((review) => (\r\n                      <div key={review.id}>\r\n                        <p>Tên người dùng: {review.username}</p>\r\n                        <p>Đánh giá: {review.rating}*</p>\r\n                        <p>Đánh giá văn bản: {review.reviewText}</p>\r\n                      </div>\r\n                    ))}\r\n                  </td>\r\n                  <td>\r\n                    <Button color=\"primary\" onClick={() => handleTourClick(tour)}>Xem</Button>{\" \"}\r\n                    <Button color=\"warning\" onClick={() => { setSelectedTour(tour); toggleEditModal(); }}>Sửa</Button>{\" \"}\r\n                    <Button color=\"danger\" onClick={() => { setSelectedTour(tour); handleDeleteTour(); }}>Xóa</Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n        <Pagination className=\"pagination\">\r\n          <div className=\"pagination\">\r\n            {Array.from({ length: Math.ceil(searchedTours.length / toursPerPage) }, (_, index) => (\r\n              <Button\r\n                key={index}\r\n                className={`page-item ${currentPage === index + 1 ? \"active\" : \"\"}`}\r\n                onClick={() => paginate(index + 1)}\r\n              >\r\n                {index + 1}\r\n              </Button>\r\n            ))}\r\n          </div>\r\n        </Pagination>\r\n      </section>\r\n      <Modal isOpen={modalOpen} toggle={toggleModal} size=\"lg\">\r\n        <ModalHeader toggle={toggleModal}>{selectedTour?.title}</ModalHeader>\r\n        <ModalBody>\r\n          <td>\r\n            {selectedTour && selectedTour.desc && (\r\n              <div>\r\n                <Editor\r\n                  editorState={EditorState.createWithContent(ContentState.createFromBlockArray(convertFromHTML(selectedTour.desc)))}\r\n                  readOnly={true}\r\n                />\r\n              </div>\r\n            )}\r\n          </td>\r\n        </ModalBody>\r\n      </Modal>\r\n\r\n      <AddTourModal isOpen={addModalOpen} toggleModal={toggleAddModal} handleAddTour={handleAddTour} />\r\n      <EditTourModal isOpen={editModalOpen} toggleModal={toggleEditModal} selectedTour={selectedTour} handleUpdateTour={handleUpdateTour} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TourList;\r\n","A:\\MockRw59\\frontend\\src\\Admin\\pages\\booking\\Booking.jsx",["250","251"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from \"reactstrap\";\r\nimport BookingTable from \"./BookingTable\";\r\nimport TourInfoModal from \"./TourInfoModal\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport { PaymentStatus } from \"../../utils/PaymentStatus\";\r\nimport BookingChart from \"../statistical/BookingChart\";\r\n\r\nconst baseUrl = \"http://localhost:8888/bookings\";\r\n\r\nconst BookingList = () => {\r\n  const [bookings, setBookings] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [openEditModal, setOpenEditModal] = useState(false);\r\n  const [bookingToEdit, setBookingToEdit] = useState(null);\r\n  const { token } = useContext(AuthContext);\r\n  const [selectedTour, setSelectedTour] = useState(null);\r\n  const [openTourModal, setOpenTourModal] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchBookings();\r\n  }, []);\r\n\r\n  const fetchBookings = () => {\r\n    setLoading(true);\r\n    fetch(`${baseUrl}/get-all`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setBookings(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleEditBooking = () => {\r\n    fetch(`${baseUrl}/update/${bookingToEdit.bookingId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({\r\n        fullName: bookingToEdit.fullName,\r\n        email: bookingToEdit.email,\r\n        phoneNumber: bookingToEdit.phoneNumber,\r\n        address: bookingToEdit.address,\r\n        note: bookingToEdit.note,\r\n        guestSize: bookingToEdit.guestSize,\r\n        tour: bookingToEdit.tour.id,\r\n        totalAmount: bookingToEdit.totalAmount,\r\n        status: bookingToEdit.status,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          alert(\"Đã Sửa Thành công\");\r\n          fetchBookings();\r\n        } else {\r\n          throw new Error(\"Không thể cập nhật booking.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      })\r\n      .finally(() => {\r\n        setOpenEditModal(false);\r\n      });\r\n  };\r\n\r\n  const handleDeleteBooking = (bookingId) => {\r\n    fetch(`${baseUrl}/delete/${bookingId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          alert(\"Xóa thành công \");\r\n          fetchBookings();\r\n        } else {\r\n          throw new Error(\"Không thể xóa booking.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  const handleEditModalOpen = (booking) => {\r\n    setBookingToEdit(booking);\r\n    setOpenEditModal(true);\r\n  };\r\n\r\n  const handleShowTourInfo = (tour) => {\r\n    console.log(tour);\r\n    setSelectedTour(tour);\r\n    setOpenTourModal(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setOpenEditModal(false);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    const filteredBookings = bookings.filter((booking) =>\r\n      booking.fullName.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setSearchResults(filteredBookings);\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <h4 className=\"text-center\">Danh sách booking</h4>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col xs={12} md={3}>\r\n            <div className=\"d-flex align-items-center\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Tìm kiếm theo tên khách hàng\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n              />\r\n              <Button color=\"primary\" onClick={handleSearch}>\r\n                Tìm kiếm\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <BookingTable\r\n              bookings={searchTerm ? searchResults : bookings}\r\n              loading={loading}\r\n              handleEditModalOpen={handleEditModalOpen}\r\n              handleDeleteBooking={handleDeleteBooking}\r\n              handleShowTourInfo={handleShowTourInfo}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      {/* Modal Sửa */}\r\n      <Modal isOpen={openEditModal} toggle={handleCloseModal}>\r\n        <ModalHeader toggle={handleCloseModal}>Chỉnh sửa booking</ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            {/* Các trường nhập liệu tương tự như trước */}\r\n            <FormGroup>\r\n              <Label for=\"fullName\">Họ tên</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"fullName\"\r\n                id=\"fullName\"\r\n                value={bookingToEdit?.fullName || \"\"}\r\n                onChange={(e) =>\r\n                  setBookingToEdit((prevBooking) => ({\r\n                    ...prevBooking,\r\n                    fullName: e.target.value,\r\n                  }))\r\n                }\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"email\">Email</Label>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                value={bookingToEdit?.email || \"\"}\r\n                onChange={(e) =>\r\n                  setBookingToEdit((prevBooking) => ({\r\n                    ...prevBooking,\r\n                    email: e.target.value,\r\n                  }))\r\n                }\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"phoneNumber\">Số điện thoại</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"phoneNumber\"\r\n                id=\"phoneNumber\"\r\n                value={bookingToEdit?.phoneNumber || \"\"}\r\n                onChange={(e) =>\r\n                  setBookingToEdit((prevBooking) => ({\r\n                    ...prevBooking,\r\n                    phoneNumber: e.target.value,\r\n                  }))\r\n                }\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"address\">Địa chỉ</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"address\"\r\n                id=\"address\"\r\n                value={bookingToEdit?.address || \"\"}\r\n                onChange={(e) =>\r\n                  setBookingToEdit((prevBooking) => ({\r\n                    ...prevBooking,\r\n                    address: e.target.value,\r\n                  }))\r\n                }\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"note\">Ghi chú</Label>\r\n              <Input\r\n                type=\"textarea\"\r\n                name=\"note\"\r\n                id=\"note\"\r\n                value={bookingToEdit?.note || \"\"}\r\n                onChange={(e) =>\r\n                  setBookingToEdit((prevBooking) => ({\r\n                    ...prevBooking,\r\n                    note: e.target.value,\r\n                  }))\r\n                }\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"guestSize\">Số lượng khách</Label>\r\n              <Input\r\n                type=\"number\"\r\n                name=\"guestSize\"\r\n                id=\"guestSize\"\r\n                value={bookingToEdit?.guestSize || \"\"}\r\n                onChange={(e) =>\r\n                  setBookingToEdit((prevBooking) => ({\r\n                    ...prevBooking,\r\n                    guestSize: e.target.value,\r\n                  }))\r\n                }\r\n              />\r\n            </FormGroup>\r\n          \r\n            <FormGroup>\r\n              <Label for=\"tour\">Mã Tour</Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"tour\"\r\n                id=\"tour\"\r\n                value={bookingToEdit?.tour.id || \"\"}\r\n                onChange={(e) =>\r\n                  setBookingToEdit((prevBooking) => ({\r\n                    ...prevBooking,\r\n                    tour: { id: e.target.value },\r\n                  }))\r\n                }\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"guestSize\">Số tiền </Label>\r\n              <Input\r\n                type=\"text\"\r\n                name=\"totalAmount\"\r\n                id=\"guestSize\"\r\n                value={bookingToEdit?.totalAmount || \"\"}\r\n                onChange={(e) =>\r\n                  setBookingToEdit((prevBooking) => ({\r\n                    ...prevBooking,\r\n                    totalAmount: e.target.value,\r\n                  }))\r\n                }\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n        <Label for=\"status\">Trạng thái thanh toán</Label>\r\n        <Input\r\n          type=\"select\"\r\n          id=\"status\"\r\n          name=\"status\"\r\n          value={bookingToEdit?.status || \"\"}\r\n          onChange={(e) =>\r\n            setBookingToEdit((prevBooking) => ({\r\n              ...prevBooking,\r\n              status: e.target.value,\r\n            }))\r\n          }\r\n        >\r\n          <option value={PaymentStatus.PENDING}>PENDING</option>\r\n          <option value={PaymentStatus.SUCCESSFUL}>SUCCESSFUL</option>\r\n          <option value={PaymentStatus.FAILED}>FAILED</option>\r\n        </Input>\r\n      </FormGroup>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={handleEditBooking}>\r\n            Lưu thay đổi\r\n          </Button>{\" \"}\r\n          <Button color=\"secondary\" onClick={handleCloseModal}>\r\n            Hủy\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <TourInfoModal\r\n        open={openTourModal}\r\n        handleClose={() => setOpenTourModal(false)}\r\n        selectedTour={selectedTour}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default BookingList;\r\n","A:\\MockRw59\\frontend\\src\\Admin\\pages\\user\\Users.jsx",["252","253"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Input,\r\n  FormGroup,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationLink,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport \"./../../styles/user-List.css\"\r\nimport AddUserModal from \"./AddUserModal\";\r\nimport EditUserModal from \"./EditUserModal\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"animate.css\";\r\n\r\nconst ITEMS_PER_PAGE = 8;\r\nconst BASE_URL_AUTH = \"http://localhost:8888/api/users\";\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [page, setPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(ITEMS_PER_PAGE);\r\n  const [totalPages, setTotalPages] = useState();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [openAddModal, setOpenAddModal] = useState(false);\r\n  const [openEditModal, setOpenEditModal] = useState(false);\r\n  const [userToEdit, setUserToEdit] = useState(null);\r\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  }, [page, pageSize]);\r\n\r\n  const { token } = useContext(AuthContext);\r\n\r\n  const fetchUsers = () => {\r\n    setLoading(true);\r\n\r\n    fetch(`${BASE_URL_AUTH}/search`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify({\r\n        pageNumber: page,\r\n        pageSize: pageSize,\r\n        username: searchText,\r\n        role: null,\r\n        sortBy: \"userId\",\r\n        sortType: \"ASC\",\r\n        email: null,\r\n        fullName: null,\r\n        phone: null,\r\n      }),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        } else {\r\n          throw new Error(\"Không thể lấy danh sách người dùng.\");\r\n        }\r\n      })\r\n      .then((data) => {\r\n        setUsers(data.content);\r\n        setTotalPages(data.totalPages);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        setError(\"Có lỗi xảy ra khi lấy danh sách người dùng.\");\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleSearchTextChange = (event) => {\r\n    setSearchText(event.target.value);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    setPage(1);\r\n    fetchUsers();\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleDeleteUser = (userId) => {\r\n    setConfirmModalOpen(true);\r\n    setUserToEdit(userId);\r\n  };\r\n\r\n  const handleConfirmDelete = () => {\r\n    fetch(`${BASE_URL_AUTH}/${userToEdit}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          alert(\"Đã xóa thành công\");\r\n          fetchUsers();\r\n        } else {\r\n          throw new Error(\"Không thể xóa người dùng.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        setError(\"Có lỗi xảy ra khi xóa người dùng.\");\r\n      })\r\n      .finally(() => {\r\n        setConfirmModalOpen(false);\r\n        setUserToEdit(null);\r\n      });\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setConfirmModalOpen(false);\r\n    setUserToEdit(null);\r\n  };\r\n\r\n  const handleAddUser = (newUser) => {\r\n    fetch(`${BASE_URL_AUTH}/create`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(newUser),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          fetchUsers();\r\n          alert(\"Thêm mới thành công\");\r\n        } else {\r\n          throw new Error(\"Không thể thêm mới người dùng.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        setError(\"Có lỗi xảy ra khi thêm mới người dùng.\");\r\n        navigate(\"/admin\");\r\n      })\r\n      .finally(() => {\r\n        setOpenAddModal(false);\r\n      });\r\n  };\r\n\r\n  const handleEditUser = (updatedUser) => {\r\n    fetch(`${BASE_URL_AUTH}/edit/${updatedUser.userId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(updatedUser),\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          alert(\"Đã chỉnh sửa thành công\");\r\n          fetchUsers();\r\n        } else {\r\n          fetchUsers();\r\n          throw new Error(\"Không thể cập nhật người dùng.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        navigate(\"/admin\");\r\n        setError(\"Có lỗi xảy ra khi cập nhật người dùng.\");\r\n      })\r\n      .finally(() => {\r\n        setOpenEditModal(false);\r\n        fetchUsers();\r\n      });\r\n  };\r\n\r\n  const handleEditModalOpen = (user) => {\r\n    setUserToEdit(user);\r\n    setOpenEditModal(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <Container>\r\n        <h1 className=\"text-center\">Danh sách người dùng</h1>\r\n        <Row>\r\n          <Col xs={12} md={4}>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                placeholder=\"Tìm kiếm theo tên\"\r\n                value={searchText}\r\n                onChange={handleSearchTextChange}\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col xs={12} md={4}>\r\n            <Button color=\"primary\" onClick={handleSearch} block>\r\n              Tìm kiếm\r\n            </Button>\r\n          </Col>\r\n          <Col xs={12} md={4}>\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => setOpenAddModal(true)}\r\n              block\r\n              style={{ marginTop: \"10px\" }}\r\n            >\r\n              Thêm mới\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      {loading ? (\r\n        <div className=\"text-center\">\r\n          <h5>Loading...</h5>\r\n        </div>\r\n      ) : error ? (\r\n        <div className=\"text-center\">\r\n          <h5 className=\"text-danger\">{error}</h5>\r\n        </div>\r\n      ) : (\r\n        <Container className=\"content-wrapper animate__animated animate__slideInUp\">\r\n          <Table striped bordered responsive>\r\n            <thead>\r\n              <tr className=\"border-orange animate__animated animate__slideInUp\">\r\n                <th>ID</th>\r\n                <th>Tên đăng nhập</th>\r\n                <th>Email</th>\r\n                <th>Họ và tên</th>\r\n                <th>Điện thoại</th>\r\n                <th>Vai trò</th>\r\n                <th>Thao tác</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map((user) => (\r\n                <tr key={user.userId} className=\"border-orange animate__animated animate__slideInUp\">\r\n                  <td>{user.userId}</td>\r\n                  <td>{user.username}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>{user.fullName}</td>\r\n                  <td>{user.phone}</td>\r\n                  <td>{user.role}</td>\r\n                  <td>\r\n                    <Button\r\n                      color=\"danger\"\r\n                      onClick={() => handleDeleteUser(user.userId)}\r\n                    >\r\n                      Xóa\r\n                    </Button>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={() => handleEditModalOpen(user)}\r\n                    >\r\n                      Sửa\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <div>\r\n      <Pagination   className=\"pagination1\">\r\n        {[...Array(totalPages).keys()].map((pageIndex) => (\r\n          <PaginationItem key={pageIndex} active={pageIndex + 1 === page}>\r\n            <PaginationLink onClick={() => handlePageChange(null, pageIndex + 1)}>\r\n              {pageIndex + 1}\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n        ))}\r\n      </Pagination>\r\n    </div>\r\n        </Container>\r\n      )}\r\n\r\n      <AddUserModal\r\n        open={openAddModal}\r\n        onClose={() => setOpenAddModal(false)}\r\n        onAddUser={handleAddUser}\r\n      />\r\n\r\n      {userToEdit && (\r\n        <EditUserModal\r\n          open={openEditModal}\r\n          onClose={() => setOpenEditModal(false)}\r\n          userToEdit={userToEdit}\r\n          onUpdateUser={handleEditUser}\r\n        />\r\n      )}\r\n\r\n      {/* Confirm delete modal */}\r\n      <Modal isOpen={confirmModalOpen} toggle={handleCancelDelete}>\r\n        <ModalHeader toggle={handleCancelDelete}>Xác nhận xóa</ModalHeader>\r\n        <ModalBody>Bạn có chắc chắn muốn xóa người dùng này?</ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={handleCancelDelete}>\r\n            Thoát\r\n          </Button>\r\n          <Button color=\"danger\" onClick={handleConfirmDelete}>\r\n            Xóa\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","A:\\MockRw59\\frontend\\src\\shared\\Newsletter.jsx",[],[],"A:\\MockRw59\\frontend\\src\\shared\\CommonSection.jsx",[],[],"A:\\MockRw59\\frontend\\src\\shared\\TourCard.jsx",[],[],"A:\\MockRw59\\frontend\\src\\utils\\config.js",[],[],"A:\\MockRw59\\frontend\\src\\shared\\SearchBar.jsx",[],[],"A:\\MockRw59\\frontend\\src\\utils\\avgRating.js",[],[],"A:\\MockRw59\\frontend\\src\\services\\ServiceList.jsx",[],[],"A:\\MockRw59\\frontend\\src\\Admin\\utils\\PaymentStatus.js",[],[],"A:\\MockRw59\\frontend\\src\\components\\Featured-tours\\FeaturedTourList.jsx",[],[],"A:\\MockRw59\\frontend\\src\\components\\Testimonial\\Testimonials.jsx",[],[],"A:\\MockRw59\\frontend\\src\\components\\hooks\\useFetch.js",[],[],"A:\\MockRw59\\frontend\\src\\components\\image-gallery\\MasonryImagesGallery.jsx",[],[],"A:\\MockRw59\\frontend\\src\\components\\Booking\\Booking.jsx",["254","255"],[],"import React, { useState, useEffect } from \"react\";\nimport \"./booking.css\";\nimport { Form, FormGroup, ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { BASE_URL } from \"../../utils/config\";\nimport axios from \"axios\"; \n\n\n\nconst formatVND = (amount) => {\n  if (amount === undefined || isNaN(amount)) {\n    return '0'; // Hoặc giá trị mặc định khác tùy ý\n  }\n  return amount.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.');\n};\n\n\nconst Booking = ({ tour, avgRating }) => {\n  // Lấy ra giá và đánh giá trung bình từ prop tour\n  const { price, reviews } = tour;\n\n  const [isExceedMaxGroupSize, setIsExceedMaxGroupSize] = useState(false);\n\n\n  // Sử dụng hook useNavigate của React Router để điều hướng khi đặt tour thành công\n  const navigate = useNavigate();\n\n  // Khởi tạo state booking chứa thông tin đặt tour của người dùng\n  const [booking, setBooking] = useState({\n    email: \"\",\n    fullName: \"\",\n    phoneNumber: \"\",\n    address: \"\",\n    note: \"\",\n    guestSize: 1,\n    tour: tour.title,\n    tour: tour.id,\n    totalAmount :0,\n  });\n\n  \n  // Khởi tạo state isFormValid để kiểm tra tính hợp lệ của biểu mẫu\n  const [isFormValid, setIsFormValid] = useState(false);\n\n  const formattedPrice = formatVND(price);\n\n  // Khởi tạo state formError để lưu trữ thông báo lỗi cho từng trường\n  const [formError, setFormError] = useState({\n    email: \"\",\n    fullName: \"\",\n    phoneNumber: \"\",\n    address: \"\",\n    note: \"\",\n    guestSize: \"\",\n  });\n\n  // useEffect sẽ được gọi lại mỗi khi dữ liệu biểu mẫu thay đổi\n  \n\n  // Hàm handleChange để cập nhật state booking khi người dùng thay đổi thông tin\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setBooking((prev) => ({ ...prev, [id]: value }));\n    // Tính toán lại và cập nhật totalAmount khi có thay đổi trong biểu mẫu\n  const newTotalAmount =\n  Number(price) * Number(value) + Number(serviceFee);\n  setBooking((prev) => ({ ...prev, totalAmount: newTotalAmount }));\n\n  };\n\n  // Tính phí dịch vụ và tổng số tiền cần thanh toán\n  const serviceFee = 20000;\n  const totalAmount = Number(price) * Number(booking.guestSize) + Number(serviceFee);\n  const formatteTotalAmount = formatVND(totalAmount);\n  const formatteserviceFee = formatVND(serviceFee);\n  useEffect(() => {\n    // Kiểm tra thông báo lỗi cho từng trường\n    const { email, fullName, phoneNumber, address, guestSize } = booking;\n    const errors = {};\n\n    if (email.trim() === \"\") {\n      errors.email = \"Vui lòng nhập email\";\n    }\n    if (fullName.trim() === \"\") {\n      errors.fullName = \"Vui lòng nhập tên đầy đủ\";\n    }\n    if (phoneNumber.trim() === \"\") {\n      errors.phoneNumber = \"Vui lòng nhập số điện thoại\";\n    }\n    if (address.trim() === \"\") {\n      errors.address = \"Vui lòng nhập địa chỉ\";\n    }\n  \n    if (Number(guestSize) <= 0) {\n      errors.guestSize = \"Số người phải lớn hơn 0\";\n    }\n\n    // Cập nhật giá trị cho biến isFormValid dựa trên kết quả kiểm tra\n    setIsFormValid(Object.values(errors).every((val) => val === \"\"));\n\n    // Cập nhật state formError với thông báo lỗi cho từng trường\n    setFormError(errors);\n  }, [booking]);\n  // Hàm xử lý khi người dùng nhấn nút \"Đặt Ngay\"\n  const handleClick = async (e) => {\n    e.preventDefault();\n\n     // Kiểm tra nếu guestSize vượt quá maxGroupSize\n  if (booking.guestSize > tour.maxGroupSize) {\n    setIsExceedMaxGroupSize(true);\n    return alert(\"số lượng người vượt quá số lượng người trong tour\"); // Dừng tiến trình nếu vượt quá\n  }\n  \n    const totalAmountAsNumber = parseFloat(formatteTotalAmount.replace(/\\./g, ''));\n    const updatedBooking = { ...booking, totalAmount: totalAmountAsNumber };\n    try {\n      // Gửi dữ liệu đặt tour lên máy chủ thông qua API\n      const res = await axios.post(`${BASE_URL}/bookings/create`, updatedBooking, {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n      });\n\n      // Nếu đặt tour thành công, điều hướng tới trang \"thank-you\"\n      if (res.status >= 200 && res.status < 300) {\n        navigate(\"/thank-you\");\n      }\n    } catch (err) {\n   \n      alert(err.message);\n    }\n  };\n\n  return (\n    <div className=\"booking\">\n      {/* Hiển thị giá và đánh giá */}\n      <div className=\"booking__top d-flex align-items-center justify-content-between\">\n        <h3>\n          {formattedPrice} VND\n          <span>/Người</span>\n        </h3>\n        <span className=\"tour__rating d-flex align-item-center\">\n          <i className=\"ri-star-s-fill\"></i>\n          {avgRating === 0 ? null : avgRating} ({reviews?.length})\n        </span>\n      </div>\n\n      {/* Biểu mẫu đặt tour */}\n      <div className=\"booking__form\">\n        <h5>Thông Tin Cá Nhân</h5>\n        <Form className=\"booking__info-form\" onSubmit={handleClick}>\n          <FormGroup>\n          <p style={{ color: \"red\", textAlign: \"right\" }}>*</p>\n            <input\n              type=\"text\"\n              placeholder=\"email\"\n              id=\"email\"\n              value={booking.email}\n              required\n              onChange={handleChange}\n            />\n            <div className=\"error-message\">{formError.email}</div>\n          </FormGroup>\n          <FormGroup>\n        <p style={{ color: \"red\", textAlign: \"right\" }}>*</p>\n            <input\n              type=\"text\"\n              placeholder=\"Tên Đầy Đủ\"\n              id=\"fullName\"\n              value={booking.fullName}\n              required\n              onChange={handleChange}\n            />\n            <div className=\"error-message\">{formError.fullName}</div>\n          </FormGroup>\n          <FormGroup>\n        <p style={{ color: \"red\", textAlign: \"right\" }}>*</p>\n            <input\n              type=\"text\"\n              placeholder=\"Địa Chỉ\"\n              id=\"address\"\n              value={booking.address}\n              required\n              onChange={handleChange}\n            />\n            <div className=\"error-message\">{formError.address}</div>\n          </FormGroup>\n          <p style={{ color: \"red\" }}>Thông Tin Thêm Nếu Có </p>\n          <FormGroup>\n            <input\n              type=\"text\"\n              placeholder=\"Thông Tin Thêm\"\n              id=\"note\"\n              value={booking.note}\n              required\n              onChange={handleChange}\n            />\n           \n          </FormGroup>\n          <FormGroup>\n          <p style={{ color: \"red\", textAlign: \"right\" }}>*</p>\n            <input\n              type=\"text\"\n              placeholder=\"Số Điện Thoại\"\n              id=\"phoneNumber\"\n              value={booking.phoneNumber}\n              required\n              onChange={handleChange}\n            />\n            <div className=\"error-message\" >{formError.phoneNumber}</div>\n          </FormGroup>\n          <p style={{ color: \"red\", textAlign: \"right\" }}>*</p>\n          <FormGroup className=\"d-flex align-items-center gap-3\">\n         \n            <input\n              type=\"number\"\n              placeholder=\"Số người\"\n              id=\"guestSize\"\n              value={booking.guestSize}\n              required\n              onChange={handleChange}\n            />\n            <div className=\"error-message\">{formError.guestSize}</div>\n          </FormGroup>\n        </Form>\n\n        \n      </div>\n\n      {/* Thông tin đơn hàng */}\n      <div className=\"booking__bottom\">\n        <ListGroup>\n          <ListGroupItem className=\"border-0 px-0\">\n            <h5 className=\"d-flex align-items-center gap-1\">\n            {formattedPrice}<i className=\"ri-close-line\"> Người</i>{\" \"}\n            </h5>\n            <span> {formattedPrice} VND</span>\n          </ListGroupItem>\n          <ListGroupItem className=\"border-0 px-0\">\n            <h5>Thuế</h5>\n            <span>{formatteserviceFee} VND</span>\n          </ListGroupItem>\n          <ListGroupItem className=\"border-0 px-0 total\">\n            <h5>Tổng</h5>\n            <span>{formatteTotalAmount} VND</span>\n          </ListGroupItem>\n        </ListGroup>\n        {/* Nút Đặt Ngay */}\n        <Button\n          className=\"btn primary__btn w-100 mt-4\"\n          onClick={handleClick}\n          disabled={!isFormValid}\n        >\n          Đặt Ngay\n        </Button>\n      </div>\n    </div>\n  );\n};\n\n// Xuất thành phần Booking để sử dụng trong các thành phần khác\nexport default Booking;\n","A:\\MockRw59\\frontend\\src\\Admin\\pages\\statistical\\BookingChart.js",[],[],"A:\\MockRw59\\frontend\\src\\Admin\\pages\\tour\\AddTourModal.js",[],[],"A:\\MockRw59\\frontend\\src\\Admin\\pages\\booking\\TourInfoModal.js",[],[],"A:\\MockRw59\\frontend\\src\\Admin\\pages\\tour\\EditTourModal.js",[],[],"A:\\MockRw59\\frontend\\src\\Admin\\pages\\user\\AddUserModal.js",[],[],"A:\\MockRw59\\frontend\\src\\Admin\\pages\\user\\EditUserModal.js",[],[],"A:\\MockRw59\\frontend\\src\\Admin\\pages\\booking\\BookingTable.js",[],[],"A:\\MockRw59\\frontend\\src\\services\\ServiceCard.jsx",[],[],"A:\\MockRw59\\frontend\\src\\Admin\\utils\\formatVND.js",[],[],"A:\\MockRw59\\frontend\\src\\components\\image-gallery\\galleryImage.js",[],[],"A:\\MockRw59\\frontend\\src\\Admin\\pages\\statistical\\BookingByStatus.js",[],[],"A:\\MockRw59\\frontend\\src\\Admin\\pages\\statistical\\BookingByStatusD.js",["256"],[],{"ruleId":"257","severity":1,"message":"258","line":18,"column":6,"nodeType":"259","endLine":18,"endColumn":8,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":43,"column":9,"nodeType":"263","messageId":"264","endLine":43,"endColumn":13},{"ruleId":"261","severity":1,"message":"265","line":35,"column":5,"nodeType":"263","messageId":"264","endLine":35,"endColumn":9},{"ruleId":"261","severity":1,"message":"266","line":15,"column":20,"nodeType":"263","messageId":"264","endLine":15,"endColumn":31},{"ruleId":"257","severity":1,"message":"267","line":24,"column":6,"nodeType":"259","endLine":24,"endColumn":28,"suggestions":"268"},{"ruleId":"261","severity":1,"message":"269","line":19,"column":10,"nodeType":"263","messageId":"264","endLine":19,"endColumn":17},{"ruleId":"261","severity":1,"message":"270","line":20,"column":10,"nodeType":"263","messageId":"264","endLine":20,"endColumn":15},{"ruleId":"261","severity":1,"message":"271","line":7,"column":23,"nodeType":"263","messageId":"264","endLine":7,"endColumn":37},{"ruleId":"261","severity":1,"message":"272","line":20,"column":8,"nodeType":"263","messageId":"264","endLine":20,"endColumn":20},{"ruleId":"257","severity":1,"message":"273","line":37,"column":6,"nodeType":"259","endLine":37,"endColumn":8,"suggestions":"274"},{"ruleId":"261","severity":1,"message":"266","line":33,"column":20,"nodeType":"263","messageId":"264","endLine":33,"endColumn":31},{"ruleId":"257","severity":1,"message":"275","line":45,"column":6,"nodeType":"259","endLine":45,"endColumn":22,"suggestions":"276"},{"ruleId":"261","severity":1,"message":"277","line":22,"column":10,"nodeType":"263","messageId":"264","endLine":22,"endColumn":30},{"ruleId":"278","severity":1,"message":"279","line":37,"column":5,"nodeType":"280","messageId":"281","endLine":37,"endColumn":9},{"ruleId":"257","severity":1,"message":"282","line":86,"column":6,"nodeType":"259","endLine":86,"endColumn":15,"suggestions":"283"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate' and 'role'. Either include them or remove the dependency array.","ArrayExpression",["284"],"no-unused-vars","'year' is assigned a value but never used.","Identifier","unusedVar","'desc' is assigned a value but never used.","'setPageSize' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'pageSize'. Either include it or remove the dependency array.",["285"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'convertFromRaw' is defined but never used.","'BookingChart' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchBookings'. Either include it or remove the dependency array.",["286"],"React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.",["287"],"'isExceedMaxGroupSize' is assigned a value but never used.","no-dupe-keys","Duplicate key 'tour'.","ObjectExpression","unexpected","React Hook useEffect has a missing dependency: 'drawChart'. Either include it or remove the dependency array.",["288"],{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},"Update the dependencies array to be: [navigate, role]",{"range":"299","text":"300"},"Update the dependencies array to be: [page, pageSize, tourCount, tours]",{"range":"301","text":"302"},"Update the dependencies array to be: [fetchBookings]",{"range":"303","text":"304"},"Update the dependencies array to be: [fetchUsers, page, pageSize]",{"range":"305","text":"306"},"Update the dependencies array to be: [drawChart, loading]",{"range":"307","text":"308"},[695,697],"[navigate, role]",[913,935],"[page, pageSize, tourCount, tours]",[1140,1142],"[fetchBookings]",[1380,1396],"[fetchUsers, page, pageSize]",[2511,2520],"[drawChart, loading]"]