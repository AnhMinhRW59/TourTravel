{"ast":null,"code":"var _jsxFileName = \"A:\\\\MockRw59\\\\frontend\\\\src\\\\Admin\\\\pages\\\\statistical\\\\BookingByStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../../context/AuthContext\";\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingChart = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const {\n    token\n  } = useContext(AuthContext);\n  useEffect(() => {\n    axios.get(\"http://localhost:8888/bookings/count-by-status-and-month\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      const countsByStatusAndMonth = response.data;\n      console.log(countsByStatusAndMonth);\n      // Khởi tạo dữ liệu trống cho mỗi trạng thái\n      const failedData = [];\n      const pendingData = [];\n      const successfulData = [];\n\n      // Khởi tạo dữ liệu trống cho mỗi tháng\n      const months = [\"Tháng 1\", \"Tháng 2\", \"Tháng 3\", \"Tháng 4\", \"Tháng 5\", \"Tháng 6\", \"Tháng 7\", \"Tháng 8\", \"Tháng 9\", \"Tháng 10\", \"Tháng 11\", \"Tháng 12\"];\n      months.forEach((month, index) => {\n        const monthData = {\n          month,\n          count: 0\n        };\n        failedData.push(monthData);\n        pendingData.push(monthData);\n        successfulData.push(monthData);\n\n        // Cập nhật dữ liệu dựa trên dữ liệu trả về từ API\n        countsByStatusAndMonth.forEach(item => {\n          if (item.month === month) {\n            switch (item.status) {\n              case \"FAILED\":\n                failedData[index].count = item.count;\n                break;\n              case \"PENDING\":\n                pendingData[index].count = item.count;\n                break;\n              case \"SUCCESSFUL\":\n                successfulData[index].count = item.count;\n                break;\n              default:\n                break;\n            }\n          }\n        });\n      });\n      setData({\n        failed: failedData,\n        pending: pendingData,\n        successful: successfulData\n      });\n      setLoading(false);\n    }).catch(error => {\n      setLoading(false);\n    });\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"12\",\n        sm: \"8\",\n        md: \"6\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(AreaChart, {\n          width: 600,\n          height: 400,\n          data: data.F,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: value => `${value} booking`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Area, {\n            type: \"monotone\",\n            dataKey: \"count\",\n            stroke: \"red\",\n            fill: \"red\",\n            name: \"FAILED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingChart, \"CE9kn8EsACuKTX0PouZkEWqWeU0=\");\n_c = BookingChart;\nexport default BookingChart;\nvar _c;\n$RefreshReg$(_c, \"BookingChart\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","AuthContext","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Container","Row","Col","jsxDEV","_jsxDEV","BookingChart","_s","loading","setLoading","data","setData","token","get","headers","Authorization","then","response","countsByStatusAndMonth","console","log","failedData","pendingData","successfulData","months","forEach","month","index","monthData","count","push","item","status","failed","pending","successful","catch","error","children","className","xs","sm","md","fileName","_jsxFileName","lineNumber","columnNumber","width","height","F","strokeDasharray","dataKey","formatter","value","type","stroke","fill","name","_c","$RefreshReg$"],"sources":["A:/MockRw59/frontend/src/Admin/pages/statistical/BookingByStatus.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\nconst BookingChart = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const { token } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8888/bookings/count-by-status-and-month\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const countsByStatusAndMonth = response.data;\r\n        console.log(countsByStatusAndMonth)\r\n        // Khởi tạo dữ liệu trống cho mỗi trạng thái\r\n        const failedData = [];\r\n        const pendingData = [];\r\n        const successfulData = [];\r\n\r\n        // Khởi tạo dữ liệu trống cho mỗi tháng\r\n        const months = [\"Tháng 1\", \"Tháng 2\", \"Tháng 3\", \"Tháng 4\", \"Tháng 5\", \"Tháng 6\", \"Tháng 7\", \"Tháng 8\", \"Tháng 9\", \"Tháng 10\", \"Tháng 11\", \"Tháng 12\"];\r\n\r\n        months.forEach((month, index) => {\r\n          const monthData = { month, count: 0 };\r\n          failedData.push(monthData);\r\n          pendingData.push(monthData);\r\n          successfulData.push(monthData);\r\n\r\n          // Cập nhật dữ liệu dựa trên dữ liệu trả về từ API\r\n          countsByStatusAndMonth.forEach((item) => {\r\n            if (item.month === month) {\r\n              switch (item.status) {\r\n                case \"FAILED\":\r\n                  failedData[index].count = item.count;\r\n                  break;\r\n                case \"PENDING\":\r\n                  pendingData[index].count = item.count;\r\n                  break;\r\n                case \"SUCCESSFUL\":\r\n                  successfulData[index].count = item.count;\r\n                  break;\r\n                default:\r\n                  break;\r\n              }\r\n            }\r\n          });\r\n        });\r\n\r\n        setData({ failed: failedData, pending: pendingData, successful: successfulData });\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n      });\r\n  }, [token]);\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center mt-4\">\r\n        <Col xs=\"12\" sm=\"8\" md=\"6\">\r\n          {loading ? (\r\n            <p>Loading...</p>\r\n          ) : (\r\n            <AreaChart width={600} height={400} data={data.F}>\r\n            \r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"month\" />\r\n              <YAxis />\r\n              <Tooltip formatter={(value) => `${value} booking`} />\r\n              <Legend />\r\n              <Area type=\"monotone\" dataKey=\"count\" stroke=\"red\" fill=\"red\" name=\"FAILED\" />\r\n            </AreaChart>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      {/* ...Các biểu đồ khác ứng với 'pending' và 'successful' */}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BookingChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}