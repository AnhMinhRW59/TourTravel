{"ast":null,"code":"var _jsxFileName = \"A:\\\\MockRw59\\\\frontend\\\\src\\\\Admin\\\\pages\\\\statistical\\\\BookingByStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../../context/AuthContext\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingChart = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const {\n    token\n  } = useContext(AuthContext);\n  useEffect(() => {\n    axios.get(\"http://localhost:8888/bookings/count-by-status\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(response => {\n      const bookings = response.data;\n\n      // Tạo đối tượng để lưu trữ số lượng booking theo từng status\n      const statusCounts = {\n        PENDING: 0,\n        SUCCESSFUL: 0,\n        FAILED: 0\n      };\n\n      // Đếm số lượng booking theo từng status\n      bookings.forEach(booking => {\n        statusCounts[booking.status] += 1;\n      });\n\n      // Chuyển đổi đối tượng statusCounts thành mảng data cho biểu đồ\n      const chartData = Object.keys(statusCounts).map(status => ({\n        status,\n        count: statusCounts[status]\n      }));\n      setData(chartData);\n      setLoading(false);\n    }).catch(error => {\n      setLoading(false);\n    });\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center mt-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"12\",\n        sm: \"8\",\n        md: \"6\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(BarChart, {\n          width: 600,\n          height: 400,\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"count\",\n            fill: \"red\",\n            name: \"s\\u1ED1 l\\u01B0\\u1EE3ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingChart, \"CE9kn8EsACuKTX0PouZkEWqWeU0=\");\n_c = BookingChart;\nexport default BookingChart;\nvar _c;\n$RefreshReg$(_c, \"BookingChart\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","AuthContext","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Container","Row","Col","jsxDEV","_jsxDEV","BookingChart","_s","loading","setLoading","data","setData","token","get","headers","Authorization","then","response","bookings","statusCounts","PENDING","SUCCESSFUL","FAILED","forEach","booking","status","chartData","Object","keys","map","count","catch","error","children","className","xs","sm","md","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","fill","name","_c","$RefreshReg$"],"sources":["A:/MockRw59/frontend/src/Admin/pages/statistical/BookingByStatus.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../../context/AuthContext\";\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nconst BookingChart = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const { token } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:8888/bookings/count-by-status\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        const bookings = response.data;\r\n\r\n        // Tạo đối tượng để lưu trữ số lượng booking theo từng status\r\n        const statusCounts = {\r\n          PENDING: 0,\r\n          SUCCESSFUL: 0,\r\n          FAILED: 0,\r\n        };\r\n\r\n        // Đếm số lượng booking theo từng status\r\n        bookings.forEach((booking) => {\r\n          statusCounts[booking.status] += 1;\r\n        });\r\n\r\n        // Chuyển đổi đối tượng statusCounts thành mảng data cho biểu đồ\r\n        const chartData = Object.keys(statusCounts).map((status) => ({\r\n          status,\r\n          count: statusCounts[status],\r\n        }));\r\n\r\n        setData(chartData);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n      });\r\n  }, [token]);\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center mt-4\">\r\n        <Col xs=\"12\" sm=\"8\" md=\"6\">\r\n          {loading ? (\r\n            <p>Loading...</p>\r\n          ) : (\r\n            <BarChart width={600} height={400} data={data}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"month\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Bar dataKey=\"count\" fill=\"red\" name=\"số lượng\" />\r\n            </BarChart>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BookingChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,8BAA8B;AAC1D,SAASC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACtF,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqB,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM;IAAEuB;EAAM,CAAC,GAAGrB,UAAU,CAACE,WAAW,CAAC;EAEzCH,SAAS,CAAC,MAAM;IACdE,KAAK,CACFqB,GAAG,CAAC,gDAAgD,EAAE;MACrDC,OAAO,EAAE;QACPC,aAAa,EAAG,UAASH,KAAM;MACjC;IACF,CAAC,CAAC,CACDI,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,QAAQ,GAAGD,QAAQ,CAACP,IAAI;;MAE9B;MACA,MAAMS,YAAY,GAAG;QACnBC,OAAO,EAAE,CAAC;QACVC,UAAU,EAAE,CAAC;QACbC,MAAM,EAAE;MACV,CAAC;;MAED;MACAJ,QAAQ,CAACK,OAAO,CAAEC,OAAO,IAAK;QAC5BL,YAAY,CAACK,OAAO,CAACC,MAAM,CAAC,IAAI,CAAC;MACnC,CAAC,CAAC;;MAEF;MACA,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACT,YAAY,CAAC,CAACU,GAAG,CAAEJ,MAAM,KAAM;QAC3DA,MAAM;QACNK,KAAK,EAAEX,YAAY,CAACM,MAAM;MAC5B,CAAC,CAAC,CAAC;MAEHd,OAAO,CAACe,SAAS,CAAC;MAClBjB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDsB,KAAK,CAAEC,KAAK,IAAK;MAChBvB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,CAACG,KAAK,CAAC,CAAC;EAEX,oBACEP,OAAA,CAACJ,SAAS;IAAAgC,QAAA,eACR5B,OAAA,CAACH,GAAG;MAACgC,SAAS,EAAC,6BAA6B;MAAAD,QAAA,eAC1C5B,OAAA,CAACF,GAAG;QAACgC,EAAE,EAAC,IAAI;QAACC,EAAE,EAAC,GAAG;QAACC,EAAE,EAAC,GAAG;QAAAJ,QAAA,EACvBzB,OAAO,gBACNH,OAAA;UAAA4B,QAAA,EAAG;QAAU;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAEjBpC,OAAA,CAACX,QAAQ;UAACgD,KAAK,EAAE,GAAI;UAACC,MAAM,EAAE,GAAI;UAACjC,IAAI,EAAEA,IAAK;UAAAuB,QAAA,gBAC5C5B,OAAA,CAACP,aAAa;YAAC8C,eAAe,EAAC;UAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvCpC,OAAA,CAACT,KAAK;YAACiD,OAAO,EAAC;UAAO;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzBpC,OAAA,CAACR,KAAK;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACTpC,OAAA,CAACN,OAAO;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACXpC,OAAA,CAACL,MAAM;YAAAsC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACVpC,OAAA,CAACV,GAAG;YAACkD,OAAO,EAAC,OAAO;YAACC,IAAI,EAAC,KAAK;YAACC,IAAI,EAAC;UAAU;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C;MACX;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAAClC,EAAA,CA7DID,YAAY;AAAA0C,EAAA,GAAZ1C,YAAY;AA+DlB,eAAeA,YAAY;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}